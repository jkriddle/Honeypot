// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

using NUnit.Framework;

namespace CFC.Test.LoadAndPerformance
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// RiderLogin - Use 'RiderLoginParams' to pass parameters into this method.
        /// </summary>
        public void RiderLogin()
        {
            #region Variable Declarations
            HtmlHyperlink uIDocumentsHyperlink = this.UIGoogleWindowsInterneWindow.UIGoogleDocument.UIDocumentsHyperlink;
            BrowserWindow uIGoogleWindowsInterneWindow = this.UIGoogleWindowsInterneWindow;
            HtmlHyperlink uISignInHyperlink = this.UIGoogleWindowsInterneWindow.UIHomeDocument.UISignInHyperlink;
            HtmlEdit uIEmailEdit = this.UIGoogleWindowsInterneWindow.UIHomeDocument.UIEmailEdit;
            HtmlEdit uIPasswordEdit = this.UIGoogleWindowsInterneWindow.UIHomeDocument.UIPasswordEdit;
            HtmlButton uISignInButton = this.UIGoogleWindowsInterneWindow.UIHomeDocument.UISignInButton;
            HtmlSpan uISignInPane = this.UIGoogleWindowsInterneWindow.UIHomeDocument.UISignInPane;
            HtmlImage uIContentimgtrips_iconImage = this.UIGoogleWindowsInterneWindow.UIDashboardDocument.UIDashboardTripsPane.UIContentimgtrips_iconImage;
            HtmlHyperlink uILogoutHyperlink = this.UIGoogleWindowsInterneWindow.UIManageTripsDocument.UIRidercarfarecomparecPane.UILogoutHyperlink;
            #endregion

            // Go to web page 'http://google.com/' using new browser instance
            this.UIGoogleWindowsInterneWindow.LaunchUrl(new System.Uri(this.RiderLoginParams.UIGoogleWindowsInterneWindowUrl));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'Documents' link at (39, 8)
            Mouse.Hover(uIDocumentsHyperlink, new Point(39, 8));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Go to web page 'http://localhost:7787/'
            uIGoogleWindowsInterneWindow.NavigateToUrl(new System.Uri(this.RiderLoginParams.UIGoogleWindowsInterneWindowUrl1));

            // Click 'Sign In' link
            Mouse.Click(uISignInHyperlink, new Point(28, 3));

            // Type 'rider@carfarecompare.com' in 'Email' text box
            uIEmailEdit.Text = this.RiderLoginParams.UIEmailEditText;

            // Type '{Tab}' in 'Email' text box
            Keyboard.SendKeys(uIEmailEdit, this.RiderLoginParams.UIEmailEditSendKeys, ModifierKeys.None);

            // Type '********' in 'Password' text box
            uIPasswordEdit.Password = this.RiderLoginParams.UIPasswordEditPassword;

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'Sign In' button at (79, 9)
            Mouse.Hover(uISignInButton, new Point(79, 9));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click 'Sign In' pane
            Mouse.Click(uISignInPane, new Point(46, 10));

            // Click '/Content/img/trips_icon.png' image
            Mouse.Click(uIContentimgtrips_iconImage, new Point(59, 11));

            // Click 'Logout' link
            Mouse.Click(uILogoutHyperlink, new Point(27, 2));
        }
        
        /// <summary>
        /// NewLoginMethod - Use 'NewLoginMethodParams' to pass parameters into this method.
        /// </summary>
        public void NewLoginMethod()
        {
            #region Variable Declarations
            BrowserWindow uIGoogleWindowsInterneWindow = this.UIGoogleWindowsInterneWindow;
            HtmlHyperlink uISignInHyperlink = this.UIGoogleWindowsInterneWindow.UIHomeDocument.UISignInHyperlink;
            HtmlEdit uIEmailEdit = this.UIGoogleWindowsInterneWindow.UIHomeDocument.UIEmailEdit;
            HtmlEdit uIPasswordEdit = this.UIGoogleWindowsInterneWindow.UIHomeDocument.UIPasswordEdit;
            HtmlButton uISignInButton = this.UIGoogleWindowsInterneWindow.UIHomeDocument.UISignInButton;
            HtmlHyperlink uIScheduleaRideHyperlink = this.UIGoogleWindowsInterneWindow.UIDashboardDocument.UIRiderDashboardScheduPane.UIScheduleaRideHyperlink;
            HtmlImage uIContentimgtrips_iconImage = this.UIGoogleWindowsInterneWindow.UIDashboardDocument.UIDashboardTripsPane.UIContentimgtrips_iconImage;
            HtmlHyperlink uILogoutHyperlink = this.UIGoogleWindowsInterneWindow.UIManageTripsDocument.UIRidercarfarecomparecPane.UILogoutHyperlink;
            #endregion

            // Go to web page 'http://localhost:7787/'
            uIGoogleWindowsInterneWindow.NavigateToUrl(new System.Uri(this.NewLoginMethodParams.UIGoogleWindowsInterneWindowUrl));

            // Click 'Sign In' link
            Mouse.Click(uISignInHyperlink, new Point(20, 5));

            // Type 'rider@carfarecompare.com' in 'Email' text box
            uIEmailEdit.Text = this.NewLoginMethodParams.UIEmailEditText;

            // Type '{Tab}' in 'Email' text box
            Keyboard.SendKeys(uIEmailEdit, this.NewLoginMethodParams.UIEmailEditSendKeys, ModifierKeys.None);

            // Type '********' in 'Password' text box
            uIPasswordEdit.Password = this.NewLoginMethodParams.UIPasswordEditPassword;

            // Click 'Sign In' button
            Mouse.Click(uISignInButton, new Point(82, 19));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'Schedule a Ride' link at (143, 36)
            Mouse.Hover(uIScheduleaRideHyperlink, new Point(143, 36));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click '/Content/img/trips_icon.png' image
            Mouse.Click(uIContentimgtrips_iconImage, new Point(48, 36));

            // Click 'Logout' link
            Mouse.Click(uILogoutHyperlink, new Point(19, 2));
        }
        
        #region Properties
        public virtual RiderLoginParams RiderLoginParams
        {
            get
            {
                if ((this.mRiderLoginParams == null))
                {
                    this.mRiderLoginParams = new RiderLoginParams();
                }
                return this.mRiderLoginParams;
            }
        }
        
        public virtual NewLoginMethodParams NewLoginMethodParams
        {
            get
            {
                if ((this.mNewLoginMethodParams == null))
                {
                    this.mNewLoginMethodParams = new NewLoginMethodParams();
                }
                return this.mNewLoginMethodParams;
            }
        }
        
        public UIGoogleWindowsInterneWindow UIGoogleWindowsInterneWindow
        {
            get
            {
                if ((this.mUIGoogleWindowsInterneWindow == null))
                {
                    this.mUIGoogleWindowsInterneWindow = new UIGoogleWindowsInterneWindow();
                }
                return this.mUIGoogleWindowsInterneWindow;
            }
        }
        #endregion
        
        #region Fields
        private RiderLoginParams mRiderLoginParams;
        
        private NewLoginMethodParams mNewLoginMethodParams;
        
        private UIGoogleWindowsInterneWindow mUIGoogleWindowsInterneWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RiderLogin'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class RiderLoginParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://google.com/' using new browser instance
        /// </summary>
        public string UIGoogleWindowsInterneWindowUrl = "http://google.com/";
        
        /// <summary>
        /// Go to web page 'http://localhost:7787/'
        /// </summary>
        public string UIGoogleWindowsInterneWindowUrl1 = "http://localhost:7787/";
        
        /// <summary>
        /// Type 'rider@carfarecompare.com' in 'Email' text box
        /// </summary>
        public string UIEmailEditText = "rider@carfarecompare.com";
        
        /// <summary>
        /// Type '{Tab}' in 'Email' text box
        /// </summary>
        public string UIEmailEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'Password' text box
        /// </summary>
        public string UIPasswordEditPassword = "SfMI6drZbBj+8lDOXCOeg7RGHg/RDmWT";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'NewLoginMethod'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class NewLoginMethodParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://localhost:7787/'
        /// </summary>
        public string UIGoogleWindowsInterneWindowUrl = "http://localhost:7787/";
        
        /// <summary>
        /// Type 'rider@carfarecompare.com' in 'Email' text box
        /// </summary>
        public string UIEmailEditText = "rider@carfarecompare.com";
        
        /// <summary>
        /// Type '{Tab}' in 'Email' text box
        /// </summary>
        public string UIEmailEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'Password' text box
        /// </summary>
        public string UIPasswordEditPassword = "SfMI6drZbBj+8lDOXCOeg7RGHg/RDmWT";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIGoogleWindowsInterneWindow : BrowserWindow
    {
        
        public UIGoogleWindowsInterneWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Google";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Google");
            this.WindowTitles.Add("http://localhost:7787/");
            this.WindowTitles.Add("Home");
            this.WindowTitles.Add("Dashboard");
            this.WindowTitles.Add("Manage Trips");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGoogleDocument UIGoogleDocument
        {
            get
            {
                if ((this.mUIGoogleDocument == null))
                {
                    this.mUIGoogleDocument = new UIGoogleDocument(this);
                }
                return this.mUIGoogleDocument;
            }
        }
        
        public UIHomeDocument UIHomeDocument
        {
            get
            {
                if ((this.mUIHomeDocument == null))
                {
                    this.mUIHomeDocument = new UIHomeDocument(this);
                }
                return this.mUIHomeDocument;
            }
        }
        
        public UIDashboardDocument UIDashboardDocument
        {
            get
            {
                if ((this.mUIDashboardDocument == null))
                {
                    this.mUIDashboardDocument = new UIDashboardDocument(this);
                }
                return this.mUIDashboardDocument;
            }
        }
        
        public UIManageTripsDocument UIManageTripsDocument
        {
            get
            {
                if ((this.mUIManageTripsDocument == null))
                {
                    this.mUIManageTripsDocument = new UIManageTripsDocument(this);
                }
                return this.mUIManageTripsDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIGoogleDocument mUIGoogleDocument;
        
        private UIHomeDocument mUIHomeDocument;
        
        private UIDashboardDocument mUIDashboardDocument;
        
        private UIManageTripsDocument mUIManageTripsDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIGoogleDocument : HtmlDocument
    {
        
        public UIGoogleDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "gsr";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Google";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://www.google.com/";
            this.WindowTitles.Add("Google");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIDocumentsHyperlink
        {
            get
            {
                if ((this.mUIDocumentsHyperlink == null))
                {
                    this.mUIDocumentsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIDocumentsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "gb_25";
                    this.mUIDocumentsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIDocumentsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIDocumentsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Documents";
                    this.mUIDocumentsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/";
                    this.mUIDocumentsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIDocumentsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://docs.google.com/?tab=wo";
                    this.mUIDocumentsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "gbzt gbzt-hvr";
                    this.mUIDocumentsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=\"gb_25\" class=\"gbzt gbzt-hvr\" onclick";
                    this.mUIDocumentsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "11";
                    this.mUIDocumentsHyperlink.WindowTitles.Add("Google");
                    #endregion
                }
                return this.mUIDocumentsHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIDocumentsHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIHomeDocument : HtmlDocument
    {
        
        public UIHomeDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Home";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:7787/";
            this.WindowTitles.Add("Home");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UISignInHyperlink
        {
            get
            {
                if ((this.mUISignInHyperlink == null))
                {
                    this.mUISignInHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUISignInHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "login";
                    this.mUISignInHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUISignInHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUISignInHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Sign In";
                    this.mUISignInHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/";
                    this.mUISignInHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUISignInHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:7787/#";
                    this.mUISignInHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUISignInHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=\"login\" href=\"#\"";
                    this.mUISignInHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUISignInHyperlink.WindowTitles.Add("Home");
                    #endregion
                }
                return this.mUISignInHyperlink;
            }
        }
        
        public HtmlEdit UIEmailEdit
        {
            get
            {
                if ((this.mUIEmailEdit == null))
                {
                    this.mUIEmailEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = null;
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Email";
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "required";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "class=\"required\" name=\"Email\" type=\"text";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "8";
                    this.mUIEmailEdit.WindowTitles.Add("Home");
                    #endregion
                }
                return this.mUIEmailEdit;
            }
        }
        
        public HtmlEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = null;
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Password";
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "required";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "class=\"required\" name=\"Password\" type=\"p";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "9";
                    this.mUIPasswordEdit.WindowTitles.Add("Home");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        
        public HtmlButton UISignInButton
        {
            get
            {
                if ((this.mUISignInButton == null))
                {
                    this.mUISignInButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUISignInButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUISignInButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUISignInButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Sign In";
                    this.mUISignInButton.FilterProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUISignInButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUISignInButton.FilterProperties[HtmlButton.PropertyNames.Class] = "ui-button-primary ui-button ui-widget ui-state-default ui-corner-all ui-button-te" +
                        "xt-only";
                    this.mUISignInButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "aria-disabled=\"false\" class=\"ui-button-p";
                    this.mUISignInButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "1";
                    this.mUISignInButton.WindowTitles.Add("Home");
                    #endregion
                }
                return this.mUISignInButton;
            }
        }
        
        public HtmlSpan UISignInPane
        {
            get
            {
                if ((this.mUISignInPane == null))
                {
                    this.mUISignInPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUISignInPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUISignInPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUISignInPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Sign In";
                    this.mUISignInPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUISignInPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ui-button-text";
                    this.mUISignInPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ui-button-text\"";
                    this.mUISignInPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "11";
                    this.mUISignInPane.WindowTitles.Add("Home");
                    #endregion
                }
                return this.mUISignInPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUISignInHyperlink;
        
        private HtmlEdit mUIEmailEdit;
        
        private HtmlEdit mUIPasswordEdit;
        
        private HtmlButton mUISignInButton;
        
        private HtmlSpan mUISignInPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIDashboardDocument : HtmlDocument
    {
        
        public UIDashboardDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Dashboard";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Dashboard";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:7787/Dashboard";
            this.WindowTitles.Add("Dashboard");
            #endregion
        }
        
        #region Properties
        public UIDashboardTripsPane UIDashboardTripsPane
        {
            get
            {
                if ((this.mUIDashboardTripsPane == null))
                {
                    this.mUIDashboardTripsPane = new UIDashboardTripsPane(this);
                }
                return this.mUIDashboardTripsPane;
            }
        }
        
        public UIRiderDashboardScheduPane UIRiderDashboardScheduPane
        {
            get
            {
                if ((this.mUIRiderDashboardScheduPane == null))
                {
                    this.mUIRiderDashboardScheduPane = new UIRiderDashboardScheduPane(this);
                }
                return this.mUIRiderDashboardScheduPane;
            }
        }
        #endregion
        
        #region Fields
        private UIDashboardTripsPane mUIDashboardTripsPane;
        
        private UIRiderDashboardScheduPane mUIRiderDashboardScheduPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIDashboardTripsPane : HtmlDiv
    {
        
        public UIDashboardTripsPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "dashboardNavigation";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Dashboard\r\nTrips\r\n ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"dashboardNavigation\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "6";
            this.WindowTitles.Add("Dashboard");
            #endregion
        }
        
        #region Properties
        public HtmlImage UIContentimgtrips_iconImage
        {
            get
            {
                if ((this.mUIContentimgtrips_iconImage == null))
                {
                    this.mUIContentimgtrips_iconImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIContentimgtrips_iconImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIContentimgtrips_iconImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIContentimgtrips_iconImage.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUIContentimgtrips_iconImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/Content/img/trips_icon.png";
                    this.mUIContentimgtrips_iconImage.FilterProperties[HtmlImage.PropertyNames.Src] = "http://localhost:7787/Content/img/trips_icon.png";
                    this.mUIContentimgtrips_iconImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "/Trip/List";
                    this.mUIContentimgtrips_iconImage.FilterProperties[HtmlImage.PropertyNames.Href] = "http://localhost:7787/Trip/List";
                    this.mUIContentimgtrips_iconImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUIContentimgtrips_iconImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "src=\"/Content/img/trips_icon.png\"";
                    this.mUIContentimgtrips_iconImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "2";
                    this.mUIContentimgtrips_iconImage.WindowTitles.Add("Dashboard");
                    #endregion
                }
                return this.mUIContentimgtrips_iconImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUIContentimgtrips_iconImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIRiderDashboardScheduPane : HtmlDiv
    {
        
        public UIRiderDashboardScheduPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "mainContent";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "\r\n\r\nRider Dashboard\r\n\r\nSchedule a Ride";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"mainContent\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "7";
            this.WindowTitles.Add("Dashboard");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIScheduleaRideHyperlink
        {
            get
            {
                if ((this.mUIScheduleaRideHyperlink == null))
                {
                    this.mUIScheduleaRideHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIScheduleaRideHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIScheduleaRideHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIScheduleaRideHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIScheduleaRideHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Schedule a Ride";
                    this.mUIScheduleaRideHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/User/ScheduleRide";
                    this.mUIScheduleaRideHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIScheduleaRideHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:7787/User/ScheduleRide";
                    this.mUIScheduleaRideHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "button ui-button-primary ui-button ui-widget ui-state-default ui-corner-all ui-bu" +
                        "tton-text-only";
                    this.mUIScheduleaRideHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "aria-disabled=\"false\" class=\"button ui-b";
                    this.mUIScheduleaRideHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIScheduleaRideHyperlink.WindowTitles.Add("Dashboard");
                    #endregion
                }
                return this.mUIScheduleaRideHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIScheduleaRideHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIManageTripsDocument : HtmlDocument
    {
        
        public UIManageTripsDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Manage Trips";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Trip/List";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:7787/Trip/List";
            this.WindowTitles.Add("Manage Trips");
            #endregion
        }
        
        #region Properties
        public UIRidercarfarecomparecPane UIRidercarfarecomparecPane
        {
            get
            {
                if ((this.mUIRidercarfarecomparecPane == null))
                {
                    this.mUIRidercarfarecomparecPane = new UIRidercarfarecomparecPane(this);
                }
                return this.mUIRidercarfarecomparecPane;
            }
        }
        #endregion
        
        #region Fields
        private UIRidercarfarecomparecPane mUIRidercarfarecomparecPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIRidercarfarecomparecPane : HtmlDiv
    {
        
        public UIRidercarfarecomparecPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "utility";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "rider@carfarecompare.com | Logout";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"utility\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
            this.WindowTitles.Add("Manage Trips");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UILogoutHyperlink
        {
            get
            {
                if ((this.mUILogoutHyperlink == null))
                {
                    this.mUILogoutHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUILogoutHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUILogoutHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUILogoutHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUILogoutHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Logout";
                    this.mUILogoutHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Logout";
                    this.mUILogoutHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUILogoutHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:7787/Logout";
                    this.mUILogoutHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUILogoutHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/\"";
                    this.mUILogoutHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUILogoutHyperlink.WindowTitles.Add("Manage Trips");
                    #endregion
                }
                return this.mUILogoutHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUILogoutHyperlink;
        #endregion
    }
}
